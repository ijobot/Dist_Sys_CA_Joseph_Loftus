syntax = "proto3";

package light;

// Unary, Server-Streaming, and Client-Streaming Service
// Service that accepts requests based on various lighting functionality.

service LightService {
    // Unary functions:
    rpc GetLight(LightRequest) returns (LightResponse);
    rpc SetLight(SetLightRequest) returns (SetLightResponse);

    // Server-Streaming function:
    rpc GetLocationLights(LocationLightsRequest) returns (stream LocationLightsResponse);

    // Client-Streaming function:
    rpc SetMultipleLights(stream SetMultipleLightsRequest) returns (SetMultipleLightsResponse);
}

// User selects a specific light to access.
message LightRequest{
    uint32 id = 1;
}

// Service returns a specific light and shows its ID, location, brightness, and color.
message LightResponse{
    uint32 id = 1;
    string location = 2;
    uint32 brightness = 3;
    string color = 4;
}

// User selects lights to update and values to set.
message SetLightRequest{
    uint32 id = 1;
    uint32 brightness = 2;
    string color = 3;
}

// Service returns a confirmation message notifying the user that the settings are successfully implemented.
message SetLightResponse{
    string confirmationMessage = 1;
}

// User enters a location to see which lights are located within.
message LocationLightsRequest{
    string location = 1;
}

// Service emits a stream of all lights in the given location.
message LocationLightsResponse{
    uint32 id = 1;
    string location = 2;
    uint32 brightness = 3;
    string color = 4;
}

// User inputs a stream of lights to update at once.
message SetMultipleLightsRequest{
    uint32 id = 1;
    uint32 brightness = 2;
    string color = 3;
}

// Service returns a confirmation message notifying the user that the settings are successfully implemented across all requested light IDs.
message SetMultipleLightsResponse{
    string confirmationMessage = 1;
}

